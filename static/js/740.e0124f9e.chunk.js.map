{"version":3,"file":"static/js/740.e0124f9e.chunk.js","mappings":"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","sources":["redux/phoneBook/phoneBookSelectors.js","webpack://react-homework-template/./src/modules/Contacts/Section/section.module.css?0a5b","modules/Contacts/Section/Section.jsx","webpack://react-homework-template/./src/modules/Contacts/ContactsForm/contactsForm.module.css?d6f9","modules/Contacts/ContactsForm/ContactsForm.jsx","webpack://react-homework-template/./src/modules/Contacts/ContactList/ContactListItem/contactListItem.module.css?ba41","modules/Contacts/ContactList/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/modules/Contacts/ContactList/contactList.module.css?93ba","modules/Contacts/ContactList/ContactList.jsx","webpack://react-homework-template/./src/modules/Contacts/Filter/filter.module.css?3b52","modules/Contacts/Filter/Filter.jsx","webpack://react-homework-template/./src/modules/Contacts/contacts.module.css?23f1","modules/Contacts/Contacts.jsx","pages/ContactPage/ContactPage.jsx"],"sourcesContent":["export const getPhoneBook = store => store.contacts;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"section_wrap__v5IFi\"};","import PropTypes from \"prop-types\";\n\nimport styles from './section.module.css'\n\nconst Section = ({title, children}) => {\n    return (\n        <div className={styles.wrap}>\n            <h2>{title}</h2>\n            {children}\n        </div>\n    )\n\n}\n\nSection.defaultProps = {\n    title: '',\n}\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node,\n}\n\nexport default Section;","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"contactsForm_wrap__99T88\",\"el\":\"contactsForm_el__vammm\",\"input\":\"contactsForm_input__F7s0w\",\"btn\":\"contactsForm_btn__iVBsf\"};","\nimport { useState, memo } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './contactsForm.module.css';\n\nfunction ContactsForm({ onSubmit }) {\n  const [state, setState] = useState({\n    name: '',\n    number: '',\n  });\n\n  const { name, number } = state;\n\n  function handleChange({ target }) {\n    const { name, value } = target;\n    setState(prevState => ({ ...prevState, [name]: value }));\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onSubmit(state);\n    setState({\n      name: '',\n      number: '',\n    });\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={styles.wrap}>\n        <label className={styles.el}>\n          Name\n          <input\n            className={styles.input}\n            value={name}\n            onChange={handleChange}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n      </div>\n      <div className={styles.wrap}>\n        <label className={styles.el}>\n          Number\n          <input\n            className={styles.input}\n            value={number}\n            onChange={handleChange}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n      </div>\n      <div>\n        <button className={styles.btn} type=\"submit\">\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n}\n\nContactsForm.defaultProps = {\n  onSubmit: () => {},\n};\n\nContactsForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default memo(ContactsForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"contactListItem_item__ZP6nn\",\"name\":\"contactListItem_name__ndcld\",\"text\":\"contactListItem_text__fiIrN\",\"btn\":\"contactListItem_btn__kMGX1\"};","import { memo } from \"react\";\n\nimport PropTypes from \"prop-types\";\n\nimport styles from './contactListItem.module.css'\n\nfunction ContactListItem({name, number, removeContacts, id}) {\n    return (\n        <li className={styles.item}><span className={styles.name}>{name}:</span> <span className={styles.text}>{number}</span>\n            <button className={styles.btn} onClick={() => removeContacts(id)}>Delete</button></li>\n    )\n}\n\nContactListItem.defaultProps = {\n    name: '',\n    number: '',\n    removeContacts: () => { },\n    id: '',\n}\n\nContactListItem.propTypes = {\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    removeContacts: PropTypes.func.isRequired,\n}\n\nexport default memo(ContactListItem);","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"contactList_list__iZEka\",\"item\":\"contactList_item__P0uwv\"};","import PropTypes from 'prop-types';\n\nimport ContactListItem from './ContactListItem';\nimport styles from './contactList.module.css';\n\nconst ContactList = ({ contact, removeContacts }) => {\n  const contactEl = contact.map(({ id, name, number }) => (\n    <ContactListItem\n      key={id}\n      removeContacts={removeContacts}\n      id={id}\n      name={name}\n      number={number}\n    />\n  ));\n\n  return <ul className={styles.list}>{contactEl}</ul>;\n};\n\nContactList.defaultProps = {\n  contact: [],\n  removeContacts: () => {},\n};\n\nContactList.propTypes = {\n  removeContacts: PropTypes.func,\n  contact: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"filter_input__0hpmI\",\"wrap\":\"filter_wrap__VNJb0\",\"label\":\"filter_label__e4rts\"};","import { memo } from 'react'\n\nimport PropTypes from 'prop-types';\n\nimport styles from './filter.module.css'\n\nfunction Filter({ onChange }) {\n    return (\n        <div className={styles.wrap}>\n          <label className={styles.label}>\n            Find contacts by name\n            <input\n              className={styles.input}\n              onChange={onChange}\n              type=\"text\"\n              name=\"filter\"\n            />\n          </label>\n        </div>\n    )\n}\n\nFilter.defaultProps = {\n    onChange: ()=>{},\n}\n\nFilter.propTypes = {\n    onChange: PropTypes.func.isRequired,\n}\n\nexport default memo(Filter);","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"contacts_container__SDjB2\"};","\nimport { useCallback, useEffect, useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  fetchPhoneBook,\n  addPhoneBook,\n  removePhoneBook,\n} from '../../redux/phoneBook/phoneBookOperations'\nimport { getPhoneBook } from '../../redux/phoneBook/phoneBookSelectors'\n\n\nimport Section from './Section';\nimport ContactsForm from './ContactsForm';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\n\nimport styles from './contacts.module.css';\n\nexport function Contacts() {\n  const [filter, setFilter] = useState('');\n  const { items, loading } = useSelector(getPhoneBook);\n\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchPhoneBook())\n  }, [dispatch])\n\n  const onAddContacts = useCallback((data) => {\n    dispatch(addPhoneBook(data))\n  }, [dispatch])\n\n\n  const onRemoveContact = useCallback((id) => {\n    dispatch(removePhoneBook(id))\n  }, [dispatch])\n\n  const onFilter = (e)=>{\n      const { value } = e.target;\n      setFilter(value);\n    }\n    const getFilteredItems = () => {\n    if (!filter) {\n      return items;\n    }\n    return items.filter(el => el.name.toLowerCase().includes(filter.toLowerCase()));\n    }\n\n    const filteredItems = getFilteredItems();\n\n\n  \n  return (\n    <div className={styles.container}>\n      <Section title=\"Phonebook\">\n        <ContactsForm onSubmit={onAddContacts} />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter onChange={onFilter} />\n        {loading && <p>...Loading</p>}\n        <ContactList contact={filteredItems} removeContacts={onRemoveContact} />\n      </Section>\n    </div>\n  );\n}\n\n","import { Contacts } from 'modules/Contacts/Contacts';\r\n\r\nconst ContactPage = () => {\r\n  return (\r\n      <main>\r\n      <Contacts />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default ContactPage;\r\n"],"names":["getPhoneBook","store","contacts","Section","title","children","className","styles","defaultProps","ContactsForm","onSubmit","useState","name","number","state","setState","handleChange","target","value","prevState","e","preventDefault","onChange","type","pattern","required","memo","ContactListItem","removeContacts","id","onClick","ContactList","contact","contactEl","map","Filter","Contacts","filter","setFilter","useSelector","items","loading","dispatch","useDispatch","useEffect","fetchPhoneBook","onAddContacts","useCallback","data","addPhoneBook","onRemoveContact","removePhoneBook","filteredItems","el","toLowerCase","includes"],"sourceRoot":""}